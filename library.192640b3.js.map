{"mappings":"qLAyCO,SAASA,EAAiBC,GAC/B,GAAIA,EACF,OAAOA,EACJC,KACC,EAACC,eACCA,EAAcC,YACdA,EAAWC,aACXA,EAAYC,GACZA,EAAEC,YACFA,EAAWC,aACXA,MAEA,IAAIC,EAAa,GAEfA,EADEL,EACW,GAAGM,eAAeC,WAAWP,IAE7B,mCAGf,IAAIQ,EAAY,GAChB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAIC,EAAY,YACR,EAAJD,EAAQR,EACVS,EAAY,UACC,EAAJD,EAAQ,EAAIR,IACrBS,EAAY,kBAEdF,GAAa,wBAAwBE,a,CAGvC,MAAO,sDAAsDR,0FAGhDG,4BACAN,uFAGIG,uKAIuBH,gJAGvBI,OAAiBC,+IAKxBI,2FAIL,IAGRG,KAAK,G,gTCjGZC,EAAA,S,4CASA,IAAIC,EAAO,EAGX,MAAMC,EAAO,CACXC,YAAaC,SAASC,cAAc,iBACpCC,eAAgBF,SAASG,eAAe,aA8C1C,SAASC,IACP,IAAIC,EAcN,WACE,MAAMC,EArBR,WACE,MAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAhDvB,sCAgDiD,GACpE,OAAOC,OAAOC,OAAON,E,CAmBHO,GAElB,IAAKF,OAAOG,KAAKT,GACf,OAAO,KAKT,MAAMU,EAASpC,EAFF0B,EAAUW,MAAM,EAxEjB,EAwEoBpB,IAIhCC,EAAKI,eAAegB,MAAQ,iBACxBZ,EAAUa,OA7EF,EA6EWtB,IACrBC,EAAKI,eAAegB,MAAQ,IAE9B,OAAOF,C,CA7BWI,GAShBf,EARGA,EAQW,iCAAiCA,SAPjC,kRAShBP,EAAKC,YAAYsB,UAAYhB,C,CAvD3BP,EAAKC,aAAaK,IAClBN,EAAKI,gBACPJ,EAAKI,eAAeoB,iBAAiB,SAAS,KAC5CzB,GAAQ,EACRO,GAAmB,IAyEvBmB,OAAOC,OAAS,WACdxB,SAASyB,KAAKC,UAAUC,IAAI,iBAC5BJ,OAAOK,YAAW,WAChB5B,SAASyB,KAAKC,UAAUC,IAAI,UAC5B3B,SAASyB,KAAKC,UAAUG,OAAO,gB,GAC9B,I","sources":["src/render.js","src/library.js"],"sourcesContent":["export async function getMovieGenres() {\n  const { data } = await axios.get(\n    `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getGenres() {\n  const genres = await getMovieGenres().then(({ genres }) => genres);\n\n  return { genres };\n}\n\nexport function renderMarkup(data) {\n  getGenres().then(({ genres }) => {\n    //Добавление списка жанров в localStorage\n    saveLs('genresList', genres);\n    if (data.results) {\n      data.results.forEach(film => {\n        const { genre_ids, release_date } = film;\n        genres.forEach(({ name, id }) => {\n          if (genre_ids.includes(id)) {\n            if (genre_ids.length > 2) {\n              genre_ids.splice(2, genre_ids.length - 1);\n            }\n            genre_ids.splice(genre_ids.indexOf(id), 1, name);\n          }\n          film.genre_names = genre_ids.join(', ');\n          if (film.release_date) {\n            film.release_date = release_date.slice(0, 4);\n          }\n        });\n      });\n    }\n    const markupList = createListMarkup(data.results);\n    if (cards) {\n      cards.innerHTML = markupList;\n    }\n  });\n}\n\nexport function createListMarkup(data) {\n  if (data) {\n    return data\n      .map(\n        ({\n          original_title,\n          poster_path,\n          vote_average,\n          id,\n          genre_names,\n          release_date,\n        }) => {\n          let posterPath = ``;\n          if (poster_path) {\n            posterPath = `${IMG_BASE_URL}${IMG_W400}${poster_path}`;\n          } else {\n            posterPath = 'https://i.ibb.co/C0LFwTh/OIF.jpg';\n          }\n\n          let starIcons = '';\n          for (let i = 1; i <= 5; i++) {\n            let starClass = 'fa-star-o';\n            if (i * 2 < vote_average) {\n              starClass = 'fa-star';\n            } else if (i * 2 - 1 < vote_average) {\n              starClass = 'fa-star-half-o';\n            }\n            starIcons += `<span class=\"fa star ${starClass}\"> </span>`;\n          }\n\n          return `<li class='cards-list__item hover-cursor' data-id='${id}'>\n              <img\n                class='cards-list__img'\n                src='${posterPath}'\n                alt='${original_title}'\n                width\n                loading='lazy'\n                data-id='${id}'\n              />\n              <div class='cards-list__wrap'>\n                <div class='cards-list__info'>\n                  <h2 class='cards-list__title'>${original_title}</h2>\n                  <div class='cards-list_second_line'>\n                    <div class='cards-list__text'>\n                      <p>${genre_names} | ${release_date}</p>\n                  </div>\n                </div>\n                </div>\n                <div class='star-rate'>\n                  ${starIcons}\n                </div>     \n              </div>\n              </li>\n              `;\n        }\n      )\n      .join('');\n  }\n}\n","import './js/modal';\nimport './js/header';\nimport './js/switch-color-bkg';\nimport './js/footer';\n\nimport { createListMarkup } from './render';\nimport { getMovieById2 } from './js/API/api';\n\nconst librariesKey = 'b90b64a7e05f9e36894001e36eb3b3c7';\nlet page = 1;\nlet perPage = 9;\n\nconst refs = {\n  libraryList: document.querySelector('.library-list'),\n  loadMoreButton: document.getElementById('loadMore'),\n};\n\nif (refs.libraryList) renderLibraryData();\nif (refs.loadMoreButton) {\n  refs.loadMoreButton.addEventListener('click', () => {\n    page += 1;\n    renderLibraryData();\n  });\n}\n\n// localStorage\nfunction addMovieToLibrary(movieId) {\n  getMovieById2(movieId).then(movie => {\n    movie.genre_names = movie.genres\n      .map(genre => {\n        return genre.name;\n      })\n      .slice(0, 2)\n      .join(',');\n    if (movie.release_date) {\n      movie.release_date = movie.release_date.slice(0, 4);\n    }\n    let libraries = JSON.parse(localStorage.getItem(librariesKey)) || {};\n    libraries[movie.id] = movie;\n    localStorage.setItem(librariesKey, JSON.stringify(libraries));\n  });\n}\n\nfunction removeMovieFromLibrary(movieId) {\n  let libraries = JSON.parse(localStorage.getItem(librariesKey)) || {};\n  // delete libraries[movieId];\n  localStorage.setItem(librariesKey, JSON.stringify(libraries));\n  if (refs.libraryList) renderLibraryData();\n}\n\nfunction getMovieFromLibrary(movieId) {\n  const libraries = JSON.parse(localStorage.getItem(librariesKey)) || {};\n  return libraries[movieId];\n}\n\nfunction getMoviesFromLibrary() {\n  const libraries = JSON.parse(localStorage.getItem(librariesKey)) || {};\n  return Object.values(libraries);\n}\n\nfunction renderLibraryData() {\n  let movieMarkup = renderMovies();\n  if (!movieMarkup) {\n    movieMarkup = `\n    <div class=\" container\">\n      <p class=\"library-empty__mistake\">OOPS... <br> We are very sorry! <br> You don't have any movies at your library.</p>\n<a class=\"btn-library__link\" onclick=\"window.location.href='catalog.html'\">Search movie</a>\n    </div>\n      `;\n  } else {\n    movieMarkup = `<ul class=\"cards__list films\">${movieMarkup}</ul>`;\n  }\n  refs.libraryList.innerHTML = movieMarkup;\n}\n\nfunction renderMovies() {\n  const allMovies = getMoviesFromLibrary();\n\n  if (!Object.keys(allMovies)) {\n    return null;\n  }\n\n  let movies = allMovies.slice(0, page * perPage);\n\n  const markup = createListMarkup(movies);\n\n  refs.loadMoreButton.style = 'display: none;';\n  if (allMovies.length > page * perPage) {\n    refs.loadMoreButton.style = '';\n  }\n  return markup;\n}\n\n// spiner?\nwindow.onload = function () {\n  document.body.classList.add('loaded_hiding');\n  window.setTimeout(function () {\n    document.body.classList.add('loaded');\n    document.body.classList.remove('loaded_hiding');\n  }, 500);\n};\n"],"names":["$54572758c4217ba8$export$a8499f42c92fab5b","data","map","original_title","poster_path","vote_average","id","genre_names","release_date","posterPath","IMG_BASE_URL","IMG_W400","starIcons","i","starClass","join","parcelRequire","$ce3726a01b8ab25a$var$page","$ce3726a01b8ab25a$var$refs","libraryList","document","querySelector","loadMoreButton","getElementById","$ce3726a01b8ab25a$var$renderLibraryData","movieMarkup","allMovies","libraries","JSON","parse","localStorage","getItem","Object","values","$ce3726a01b8ab25a$var$getMoviesFromLibrary","keys","markup","slice","style","length","$ce3726a01b8ab25a$var$renderMovies","innerHTML","addEventListener","window","onload","body","classList","add","setTimeout","remove"],"version":3,"file":"library.192640b3.js.map"}