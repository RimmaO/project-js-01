var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},n={},s=e.parcelRequiref9fd;null==s&&((s=function(e){if(e in t)return t[e].exports;if(e in n){var s=n[e];delete n[e];var a={id:e,exports:{}};return t[e]=a,s.call(a.exports,a,a.exports),a.exports}var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(e,t){n[e]=t},e.parcelRequiref9fd=s),s("bUb57"),s("rtSae"),s("eEHR3");const a=document.querySelector(".js-list");let r=1;new IntersectionObserver((function(e,t){e.forEach((e=>{e.isIntersecting&&(r+=1,serviceMovie(r).then((e=>{a.insertAdjacentHTML("beforeend",o(e.results)),e.total_pages<=e.page&&t.unobserve(guard)})))}))}),{root:null,rootMargin:"400px",threshold:0});function o(e){return e.slice(0,3).map((({original_title:e,poster_path:t,release_date:n,genre:s})=>`<li class='cards-list-item'>\n       <img class='cards__list-img' src="https://image.tmdb.org/t/p/w400${t}" alt="${e}">\n       <div class='weekly-trends__overlay'></div>\n       <div class='cards__bloc-stars'>\n     <h2 class='cards__list-title'>${e}</h2>\n     <div class='cards__list-text'>${s} | ${n.slice(0,4)}</div> \n</div></li>`)).join("")}(async function(e=1){return fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=b90b64a7e05f9e36894001e36eb3b3c7&page=${e}`).then((e=>{if(!e.ok)throw new Error(e.statusText);return e.json()}))})().then((e=>{a.insertAdjacentHTML("beforeend",o(e.results))})).catch((e=>console.log(e))),s("bTcpz");var i=s("2shzp"),l=s("9fyS7");const c=document.querySelector(".container"),p=document.querySelector(".library-button");let d;p.addEventListener("click",(function(){const e=JSON.parse(localStorage.getItem("librariesKey"))||[],t=d.id;if(function(e){return(JSON.parse(localStorage.getItem("librariesKey"))||[]).some((t=>t.id===e))}(t)){const n=e.findIndex((e=>e.id===t));e.splice(n,1),localStorage.setItem("librariesKey",JSON.stringify(e)),p.textContent="Add to my library"}else e.push(d),localStorage.setItem("movie-info",JSON.stringify(e)),p.textContent="Remove from my library"})),async function(){const e=(await i.default.get("https://api.themoviedb.org/3/movie/upcoming?language=en-US",{params:{api_key:l.KEY}})).data,t=Math.floor(Math.random()*e.results.length);return e.results[t]}().then((e=>{d=e,async function(e){const t=(await async function(e){const t=await i.default.get("https://api.themoviedb.org/3/genre/movie/list?language=en",{params:{api_key:l.KEY}});let n=[];const s=t.data.genres;for(const t of s)e.genre_ids.includes(t.id)&&n.push(t.name);return n}(e).then((e=>e))).map(((e,t)=>0===t?e.charAt(0).toUpperCase()+e.slice(1):e.toLowerCase())).join(", "),n=e.release_date.split("-"),s=`${n[2]}.${n[1]}.${n[0]}`,a=`<img src="https://image.tmdb.org/t/p/w500/${e.poster_path}" alt="${e.title}" />\n        <h3 class="month-movie-title">${e.title}</h3>\n        <p class="info-key">\n          Release date <span class="info-value">${s}</span>\n        </p>\n        <p class="info-key">\n          Vote / Votes <span class="info-value">${e.vote_average}</span> / <span>${e.vote_count}</span>\n        </p>\n        <p class="info-key">Popularity <span class="info-value">${e.popularity.toFixed(1)}</span></p>\n        <p class="info-key">\n          Genre <span class="info-value">${t}</span>\n        </p>\n        <h4 class="about-title">About</h4>\n        <p class="about-description">\n          ${e.overview}\n        </p>\n        `;c.insertAdjacentHTML("afterbegin",a)}(e)})).catch((()=>{if(!movie)return function(){const e='<div class="error-message"><p>Oops...</p><p>We are very sorry!</p><p>There are no upcoming movies at the moment.</p></div> ';c.insertAdjacentHTML("afterbegin",e)}();!function(){const e='<div class="error-message"><p>Oops...</p><p>We are very sorry!</p><p>Something went wrong.</p></div>';c.insertAdjacentHTML("afterbegin",e)}()})),s("epHO8");
//# sourceMappingURL=index.96372167.js.map
