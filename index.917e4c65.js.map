{"mappings":"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","sources":["src/js/header.js","src/js/switch-color-bkg.js","src/js/weekly-trend.js","src/js/upcoming-this-month.js"],"sourcesContent":["// for mobile menu\n(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Закрываем мобильное меню на более широких экранах\n  // в случае изменения ориентации устройства.\n\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n\n// for active page\nconst doc = window.document;\nconst links = doc.querySelectorAll('a');\nconst linksCount = links.length;\nconst currentURL = doc.URL;\n\nfor (let i = 0; i < linksCount; i++) {\n  let linkURL = links[i].href;\n\n  if (currentURL.startsWith(linkURL)) {\n    links[i].classList.add('active');\n  }\n}\n","const refs = {\n  switchIcon: document.getElementById('switch-icon'),\n  body: document.querySelector('body'),\n  iconDay: document.querySelector('.icon-day'),\n  iconNight: document.querySelector('.icon-night'),\n  headerLogoText: document.querySelector('.header-logo-text'),\n  homeLink: document.getElementById('home-day'),\n  catalogLink: document.getElementById('catalog-day'),\n  myLiberyLink: document.getElementById('my-libery-day'),\n  menuLink: document.getElementById('menu-link'),\n  weeklyTrend: document.getElementById('weekly-trend'),\n};\n\nrefs.switchIcon.addEventListener('click', switchColor);\n\nwindow.addEventListener('DOMContentLoaded', addClassColor);\n\nconst KEY_LOCAL_STOREG = 'background';\n// const value = 'value';\n\nfunction switchColor() {\n  refs.body.classList.toggle('bkg-white');\n  switchIcon();\n  switchColorLink();\n  refs.headerLogoText.classList.toggle('day-logo-text');\n\n  const audit = refs.body.classList.contains('bkg-white');\n\n  save(KEY_LOCAL_STOREG, audit);\n}\n\nfunction addClassColor() {\n  const localValue = load(KEY_LOCAL_STOREG);\n  //   console.log(localValue);\n  if (localValue) {\n    switchColorLinkOn();\n    refs.body.classList.add('bkg-white');\n    refs.headerLogoText.classList.add('day-logo-text');\n    refs.switchIcon.classList.add('icon-day');\n    refs.switchIcon.classList.remove('icon-night');\n  } else {\n    switchColorLinkOff();\n    refs.switchIcon.classList.remove('icon-day');\n    refs.switchIcon.classList.add('icon-night');\n    refs.headerLogoText.classList.remove('day-logo-text');\n  }\n}\n\nfunction switchIcon() {\n  refs.switchIcon.classList.toggle('icon-day');\n  refs.switchIcon.classList.toggle('icon-night');\n}\n\nfunction switchColorLinkOn() {\n  refs.weeklyTrend.classList.add('weekly-trend-day');\n  refs.catalogLink.classList.add('menu-link-day');\n  refs.homeLink.classList.add('menu-link-day');\n  refs.myLiberyLink.classList.add('menu-link-day');\n  refs.menuLink.classList.add('menu-link-day');\n}\n\nfunction switchColorLinkOff() {\n  refs.weeklyTrend.classList.remove('weekly-trend-day');\n  refs.catalogLink.classList.remove('menu-link-day');\n  refs.homeLink.classList.remove('menu-link-day');\n  refs.myLiberyLink.classList.remove('menu-link-day');\n  refs.menuLink.classList.remove('menu-link-day');\n}\n\nfunction switchColorLink() {\n  refs.weeklyTrend.classList.toggle('weekly-trend-day');\n  refs.catalogLink.classList.toggle('menu-link-day');\n  refs.homeLink.classList.toggle('menu-link-day');\n  refs.myLiberyLink.classList.toggle('menu-link-day');\n  refs.menuLink.classList.toggle('menu-link-day');\n}\n\nconst save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst ENDPOINT = '/trending/movie/week';\nconst API_KEY = 'b90b64a7e05f9e36894001e36eb3b3c7';\n// const IMG_W400 = `/w400`;\nconst IMG_PATH = 'https://image.tmdb.org/t/p/w300';\n\nconst list = document.querySelector('.js-list');\nlet page = 1;\nlet options = {\n  root: null,\n  rootMargin: '400px',\n  threshold: 0,\n};\n\nlet observer = new IntersectionObserver(handlerPagination, options);\n\nfunction handlerPagination(entries, observer) {\n  // console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      page += 1;\n      serviceMovie(page).then(data => {\n        list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n        if (data.total_pages <= data.page) {\n          observer.unobserve(guard);\n        }\n      });\n    }\n  });\n}\n\nasync function getTrending(page = 1) {\n  return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n\n      return resp.json();\n    }\n  );\n}\ngetTrending()\n  .then(data => {\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n  })\n  .catch(err => console.log(err));\n\nfunction createMarkup(arr) {\n  return arr\n    .slice(0, 3)\n    .map(\n      ({\n        original_title,\n        poster_path,\n        release_date,\n        genre,\n      }) => `<li class='cards-list-item'>\n       <img class='cards__list-img' src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${original_title}\">\n       <div class='weekly-trends__overlay'></div>\n       <div class='cards__bloc-stars'>\n     <h2 class='cards__list-title'>${original_title}</h2>\n     <div class='cards__list-text'>${genre} | ${release_date.slice(0, 4)}</div> \n</div></li>`\n    )\n    .join('');\n}\n","import axios from 'axios';\nimport { KEY } from './API/api-key';\n\nconst container = document.querySelector('.container');\nconst addBtn = document.querySelector('.library-button');\nlet movieData;\n\naddBtn.addEventListener('click', onBtnClick);\n\nasync function fetchUpcomingMovies() {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/movie/upcoming?language=en-US',\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  const data = response.data;\n  const randomNumber = Math.floor(Math.random() * data.results.length);\n  const movie = data.results[randomNumber];\n\n  return movie;\n}\n\nfetchUpcomingMovies()\n  .then(movie => {\n    movieData = movie;\n    createMarkup(movie);\n  })\n  .catch(() => {\n    if (!movie) {\n      return notFoundMarkup();\n    }\n    errorMarkup();\n  });\n\nasync function fetchGenres(movie) {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/genre/movie/list?language=en',\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n\n  let genresArray = [];\n  const genres = response.data.genres;\n\n  for (const genre of genres) {\n    if (movie.genre_ids.includes(genre.id)) {\n      genresArray.push(genre.name);\n    }\n  }\n  return genresArray;\n}\n\nasync function createMarkup(movie) {\n  const genresResponse = await fetchGenres(movie).then(response => {\n    return response;\n  });\n  const genresList = genresResponse\n    .map((genre, index) => {\n      if (index === 0) {\n        return genre.charAt(0).toUpperCase() + genre.slice(1);\n      } else {\n        return genre.toLowerCase();\n      }\n    })\n    .join(', ');\n\n  const dateParts = movie.release_date.split('-');\n  const dateFormat = `${dateParts[2]}.${dateParts[1]}.${dateParts[0]}`;\n  const posterUrl = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n\n  const markup = `<img src=\"${posterUrl}\" alt=\"${movie.title}\" />\n        <h3 class=\"month-movie-title\">${movie.title}</h3>\n        <p class=\"info-key\">\n          Release date <span class=\"info-value\">${dateFormat}</span>\n        </p>\n        <p class=\"info-key\">\n          Vote / Votes <span class=\"info-value\">${\n            movie.vote_average\n          }</span> / <span>${movie.vote_count}</span>\n        </p>\n        <p class=\"info-key\">Popularity <span class=\"info-value\">${movie.popularity.toFixed(\n          1\n        )}</span></p>\n        <p class=\"info-key\">\n          Genre <span class=\"info-value\">${genresList}</span>\n        </p>\n        <h4 class=\"about-title\">About</h4>\n        <p class=\"about-description\">\n          ${movie.overview}\n        </p>\n        `;\n  container.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction notFoundMarkup() {\n  const markup =\n    '<div class=\"error-message\"><p>Oops...</p><p>We are very sorry!</p><p>There are no upcoming movies at the moment.</p></div> ';\n  container.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction errorMarkup() {\n  const markup =\n    '<div class=\"error-message\"><p>Oops...</p><p>We are very sorry!</p><p>Something went wrong.</p></div>';\n  container.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction onBtnClick() {\n  const storedMovies = JSON.parse(localStorage.getItem('librariesKey')) || [];\n  const movieId = movieData.id;\n\n  if (isMovieStored(movieId)) {\n    const index = storedMovies.findIndex(movie => movie.id === movieId);\n    storedMovies.splice(index, 1);\n    localStorage.setItem('librariesKey', JSON.stringify(storedMovies));\n\n    addBtn.textContent = 'Add to my library';\n  } else {\n    storedMovies.push(movieData);\n    localStorage.setItem('movie-info', JSON.stringify(storedMovies));\n\n    addBtn.textContent = 'Remove from my library';\n  }\n}\n\nfunction isMovieStored(movieId) {\n  const storedMovies = JSON.parse(localStorage.getItem('librariesKey')) || [];\n  return storedMovies.some(movie => movie.id === movieId);\n}\n"],"names":["mobileMenu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","window","matchMedia","e","matches","remove","enableBodyScroll","$8aad853c076397e7$var$doc","$8aad853c076397e7$var$links","querySelectorAll","$8aad853c076397e7$var$linksCount","length","$8aad853c076397e7$var$currentURL","URL","i","linkURL","href","startsWith","add","$0529b1cf57924152$var$refs","switchIcon","getElementById","iconDay","iconNight","headerLogoText","homeLink","catalogLink","myLiberyLink","menuLink","weeklyTrend","audit","contains","$0529b1cf57924152$var$save","$0529b1cf57924152$var$load","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","$1c26d025b3f2124b$var$list","$1c26d025b3f2124b$var$page","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","serviceMovie","then","data","insertAdjacentHTML","$1c26d025b3f2124b$var$createMarkup","results","total_pages","page","unobserve","guard","root","rootMargin","threshold","arr","slice","map","original_title","poster_path","release_date","genre","join","async","page1","fetch","resp","ok","Error","statusText","json","$1c26d025b3f2124b$var$getTrending","catch","err","log","$2shzp","parcelRequire","$85371336fd858ba9$var$container","$85371336fd858ba9$var$addBtn","$85371336fd858ba9$var$movieData","storedMovies","movieId","id","some","movie","$85371336fd858ba9$var$isMovieStored","index","findIndex","splice","textContent","push","default","get","params","api_key","$9fyS7","KEY","randomNumber","Math","floor","random","$85371336fd858ba9$var$fetchUpcomingMovies","genresList","response","genresArray","genres","genre_ids","includes","name","$85371336fd858ba9$var$fetchGenres","charAt","toUpperCase","toLowerCase","dateParts","split","dateFormat","markup","title","vote_average","vote_count","popularity","toFixed","overview","$85371336fd858ba9$var$createMarkup","$85371336fd858ba9$var$notFoundMarkup","$85371336fd858ba9$var$errorMarkup"],"version":3,"file":"index.917e4c65.js.map"}