{"mappings":"imBAAA,IAAAA,EAAAC,EAAA,S,aASA,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,aACjCC,UAAWF,SAASC,cAAc,gBAClCE,SAAUH,SAASC,cAAc,gBACjCG,YAAaJ,SAASC,cAAc,iBACpCI,UAAWL,SAASC,cAAc,qBAClCK,QAASN,SAASC,cAAc,iBAChCM,WAAYP,SAASC,cAAc,qBACnCO,UAAWR,SAASC,cAAc,gBAGpC,IAGIQ,EACAC,EAJAC,EAAa,GACbC,EAAa,GACbC,EAAa,GAQjB,SAASC,EAAYC,GACnB,MAAMC,EAAgBD,EAAME,OAAOC,QAAQ,MAC3CR,EAAkBS,OAAOH,EAAcI,aAAa,YACpDtB,EAAKS,WAAWc,iBAAiB,QAASC,GA4D5CC,eAA4BC,GAC1B,MAAMC,GAAO,EAAAC,EAAAC,oBAAmBH,GAChCZ,EAAa,GACbd,EAAKU,UAAUoB,UAAY,GAC3BH,EAAKI,MAAKC,IACOA,EAAKC,OAEbC,SAAQC,IACbrB,EAAWsB,KAAK,IAAID,EAAME,OAAO,IAEnCtB,EAuCJ,SAA0BiB,GACxB,GAAIA,EAAM,CACR,MAAMM,eACJA,EAAcC,GACdA,EAAEC,aACFA,EAAYC,YACZA,EAAWC,SACXA,EAAQC,WACRA,EAAUC,WACVA,GACEZ,EAMJ,OAJIS,IACF5B,EAAa,GAAGf,EAAA+C,eAAe/C,EAAAgD,WAAWL,KAGrC,mCAAmCF,sHAIzB1B,0BACAyB,2KAK0BA,8aAQ6CE,kDAA6DI,sEAClGD,+DACA7B,4NAKH4B,qP,EAhFnCK,CAAiBf,GAC9BhC,EAAKU,UAAUoB,UAAYf,EAE3BJ,EAAUT,SAASC,cAAc,iBACjCQ,EAAQY,iBAAiB,QAASyB,iBAAiB,G,CAxErDC,CAAarC,GAObZ,EAAKC,SAASiD,UAAUC,OAAO,aAC/BnD,EAAKO,UAAU2C,UAAUC,OAAO,aAChCjD,SAASkD,KAAKC,MAAMC,SAAW,SAC/BpD,SAASqB,iBAAiB,UAAWgC,GACrCrD,SAASqB,iBAAiB,QAASiC,E,CAmErC,SAASD,EAAcE,GACN,WAAXA,EAAEC,MACJlC,G,CAKJ,SAASgC,EAAgBC,GACnBA,EAAEtC,SAAWnB,EAAKC,UACpBuB,G,CAKJ,SAASA,EAAgBiC,GACvBzD,EAAKC,SAASiD,UAAUS,IAAI,aAC5B3D,EAAKO,UAAU2C,UAAUS,IAAI,aAC7BzD,SAASkD,KAAKC,MAAMC,SAAW,SAC/BpD,SAAS0D,oBAAoB,UAAWL,GACxCrD,SAAS0D,oBAAoB,QAASJ,GAItCxD,EAAKK,SAAWH,SAASC,cAAc,gBACnCH,EAAKK,UAAUL,EAAKK,SAASkB,iBAAiB,QAASP,E,CA/GzDhB,EAAKK,UACPL,EAAKK,SAASkB,iBAAiB,QAASP,E,mJC3B1C,IAAA6C,EAAA9D,EAAA,S,aAwCO,MAAM+D,EAAqBrC,MAAMc,IACtC,IACE,MAAMP,KAAEA,SAAe6B,EAAAE,QAAMC,IAC3B,sCAAsCzB,aAAczC,EAAAmE,OAKtD,MAHe,IACVjC,E,CAGL,MAAOkC,GACPC,QAAQD,MAAM,+BAAiCA,E,GAItCE,EAAgB3C,MAAMc,IACjC,IACE,MAAMP,KAAEA,SAAe6B,EAAAE,QAAMC,IAC3B,sCAAsCzB,aAAc8B,WAKtD,MAHe,IACVrC,E,CAGL,MAAOkC,GACPC,QAAQD,MAAM,+BAAiCA,E","sources":["src/js/modal.js","src/js/API/api.js"],"sourcesContent":["import { IMG_BASE_URL, IMG_W400 } from '../js/API/api-key';\nimport { getSecondMovieById } from '../js/API/api';\n// import {\n//   // addMovieToLibrary,\n//   // removeMovieFromLibrary,\n//   // getMovieFromLibrary,\n//   // renderLibraryData,\n// } from './library';\n\nconst refs = {\n  backdrop: document.querySelector('.backdrop'),\n  openModal: document.querySelector('.modal-films'),\n  cardList: document.querySelector('.modal-films'),\n  libraryList: document.querySelector('.library-list'),\n  modalCont: document.querySelector('.modal__container'),\n  filmBtn: document.querySelector('.film__button'),\n  closeModal: document.querySelector('.modal__close-btn'),\n  cardsfilm: document.querySelector('.cards-film'),\n};\n\nlet posterPath = '';\nlet genresList = [];\nlet filmMarkup = '';\nlet filmBtn;\nlet selectedMovieId;\n\nif (refs.cardList) {\n  refs.cardList.addEventListener('click', createModal);\n}\n\nfunction createModal(event) {\n  const selectedMovie = event.target.closest('li');\n  selectedMovieId = Number(selectedMovie.getAttribute('data-id'));\n  refs.closeModal.addEventListener('click', closeModalDescr);\n\n  createMarkup(selectedMovieId);\n\n  openModal();\n}\n\n//modal\nfunction openModal(e) {\n  refs.backdrop.classList.remove('is-hidden');\n  refs.modalCont.classList.remove('is-hidden');\n  document.body.style.overflow = 'hidden';\n  document.addEventListener('keydown', onEscBtnPress);\n  document.addEventListener('click', onBackdropClick);\n}\n\n// function onBtnClick() {\n//   const storedMovies = JSON.parse(localStorage.getItem('librariesKey')) || [];\n//   const movieId = movieData.id;\n\n//   if (isMovieStored(movieId)) {\n//     const index = storedMovies.findIndex(movie => movie.id === movieId);\n//     storedMovies.splice(index, 1);\n//     localStorage.setItem('librariesKey', JSON.stringify(storedMovies));\n\n//     addBtn.textContent = 'Add to my library';\n//   } else {\n//     storedMovies.push(movieData);\n//     localStorage.setItem('movie-info', JSON.stringify(storedMovies));\n\n//     addBtn.textContent = 'Remove from my library';\n//   }\n// }\n\n// function isMovieStored(movieId) {\n//   const storedMovies = JSON.parse(localStorage.getItem('librariesKey')) || [];\n//   return storedMovies.some(movie => movie.id === movieId);\n// }\n//  --------------------------------------------------ВАРІАНТ 2--------------------------------------------//\n// function AddFilmToLibrary() {\n//   const filmsSecId = filmBtn.dataset.id;\n//   if (getMovieFromLibrary(selectedMovieId)) {\n//     removeMovieFromLibrary(selectedMovieId);\n//     filmBtn.innerHTML = 'Add to Library';\n//   } else {\n//     addMovieToLibrary(selectedMovieId);\n//     filmBtn.innerHTML = 'Remove from Library';\n//   }\n// }\n\n// // Verefy LS\n// function changeBtnLibrary(filmsId, filmBtn) {\n//   if (getMovieFromLibrary(filmsId)) {\n//     filmBtn.innerHTML = 'Remove from Library';\n//   } else {\n//     filmBtn.innerHTML = 'Add to Library';\n//   }\n// }\n//////---------------------------------------------------------------------------------------------------------//\n// Add markup  movie\nasync function createMarkup(filmID) {\n  const film = getSecondMovieById(filmID);\n  genresList = [];\n  refs.cardsfilm.innerHTML = '';\n  film.then(data => {\n    const genres = data.genres;\n\n    genres.forEach(genre => {\n      genresList.push(` ${genre.name}`);\n    });\n    filmMarkup = createFilmMarkup(data);\n    refs.cardsfilm.innerHTML = filmMarkup;\n    // save the link to the button\n    filmBtn = document.querySelector('.film__button');\n    filmBtn.addEventListener('click', AddFilmToLibrary);\n    // changeBtnLibrary(selectedMovieId, filmBtn);\n  });\n}\n\n//  ESC modal\nfunction onEscBtnPress(e) {\n  if (e.code === 'Escape') {\n    closeModalDescr();\n  }\n}\n\n// modal back\nfunction onBackdropClick(e) {\n  if (e.target === refs.backdrop) {\n    closeModalDescr();\n  }\n}\n\n// close modal\nfunction closeModalDescr(e) {\n  refs.backdrop.classList.add('is-hidden');\n  refs.modalCont.classList.add('is-hidden');\n  document.body.style.overflow = 'scroll';\n  document.removeEventListener('keydown', onEscBtnPress);\n  document.removeEventListener('click', onBackdropClick);\n  // document.removeEventListener('click', AddFilmToLibrary);\n  // if (refs.libraryList) {\n  //   renderLibraryData();\n  refs.cardList = document.querySelector('.modal-films');\n  if (refs.cardList) refs.cardList.addEventListener('click', createModal);\n}\n// }\n\n// render mark\nfunction createFilmMarkup(data) {\n  if (data) {\n    const {\n      original_title,\n      id,\n      vote_average,\n      poster_path,\n      overview,\n      popularity,\n      vote_count,\n    } = data;\n\n    if (poster_path) {\n      posterPath = `${IMG_BASE_URL}${IMG_W400}${poster_path}`;\n    }\n\n    return `<div class='film-wrap' data-id='${id}'>\n          <ul class='film-list'>\n          <li class='film-list__img'>\n            <img\n              src='${posterPath}'\n              alt='${original_title}'\n              loading='lazy'\n            />\n            </li>\n            <li class='film-list__info'>            \n                <h2 class='film-list__title'>${original_title}</h2>\n                <div class=\"film-list__wood\">\n                  <div class=\"film-list__sub--title\">\n                    <p>Vote / Votes</p>\n                    <p>Popularity</p>\n                    <p class='film-list__sub--title'>Genre</p>\n                  </div>\n                  <div  class=\"film-list__title--wood\">\n                    <p class='film-list__text--average'><span  class='film-list__average'>${vote_average}</span>  /  <span  class='film-list__average'>${vote_count}</span></p>\n                    <p class='film-list__last--text'>${popularity}</p>\n                    <p class='film-list__last--text'>${genresList}</p>\n                  </div>\n                </div>\n                <div class='film-list__about'>\n                <p class='film-list__title--about'>ABOUT</p>\n                <p class='film-list__text--about'>${overview}</p>\n                 </div>\n                 <div class=\"film__button-position\">\n                 <button type=\"button\" class=\"film__button\">Add to my library</button>\n             </div>\n            </li>\n          </ul>\n      </div>`;\n  }\n}\n","import axios from 'axios';\nimport { KEY, BASE_URL } from './api-key';\n\nexport async function getDayTrending(page = 1) {\n  const url = `${BASE_URL}/trending/all/day?api_key=${KEY}&language=en-US&page=${page}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\nexport async function getVideos(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/videos?api_key=${KEY}&language=en-US`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data.results;\n    })\n    .catch(error => {});\n}\n\n// Фетч фильма по его ID\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`${ID_URL}${id}?api_key=${KEY}`);\n\n    const result = {\n      ...data,\n      year: createYear(data),\n      customGenres: createGenresFromID(data),\n    };\n\n    return result;\n  } catch (error) {\n    console.error('Smth wrong with api ID fetch' + error);\n  }\n}\n\nexport const getSecondMovieById = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`\n    );\n    const result = {\n      ...data,\n    };\n    return result;\n  } catch (error) {\n    console.error('Smth wrong with api ID fetch' + error);\n  }\n};\n\nexport const getMovieById2 = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    const result = {\n      ...data,\n    };\n    return result;\n  } catch (error) {\n    console.error('Smth wrong with api ID fetch' + error);\n  }\n};\n"],"names":["$9fyS7","parcelRequire","$8a7e756c566dd1ea$var$refs","backdrop","document","querySelector","openModal","cardList","libraryList","modalCont","filmBtn","closeModal","cardsfilm","$8a7e756c566dd1ea$var$filmBtn","$8a7e756c566dd1ea$var$selectedMovieId","$8a7e756c566dd1ea$var$posterPath","$8a7e756c566dd1ea$var$genresList","$8a7e756c566dd1ea$var$filmMarkup","$8a7e756c566dd1ea$var$createModal","event","selectedMovie","target","closest","Number","getAttribute","addEventListener","$8a7e756c566dd1ea$var$closeModalDescr","async","filmID","film","$pbv47","getSecondMovieById","innerHTML","then","data","genres","forEach","genre","push","name","original_title","id","vote_average","poster_path","overview","popularity","vote_count","IMG_BASE_URL","IMG_W400","$8a7e756c566dd1ea$var$createFilmMarkup","AddFilmToLibrary","$8a7e756c566dd1ea$var$createMarkup","classList","remove","body","style","overflow","$8a7e756c566dd1ea$var$onEscBtnPress","$8a7e756c566dd1ea$var$onBackdropClick","e","code","add","removeEventListener","$2shzp","$04bb4195d10bccb7$export$bc93adfbe24dbd46","default","get","KEY","error","console","$04bb4195d10bccb7$export$56be286cbf0d5fea","API_KEY"],"version":3,"file":"library.e4c07577.js.map"}